
PROJECTNAME=$(shell basename "$(PWD)")

# Go related variables.
GOBASE=$(shell pwd)
GOPATH="$(GOBASE)/vendor:$(GOBASE)"
CMD_FAVORITES=cmd/favorites
GOBIN=$(GOBASE)/$(CMD_FAVORITES)
GOFILES=$(wildcard *.go)

# Redirect error output to a file, so we can show it in development mode.
STDERR=/tmp/.$(PROJECTNAME)-stderr.txt

# PID file will keep the process id of the favorites
PID_GO_FAVORITES=/tmp/.$(PROJECTNAME)-favorites.pid

RANDOM=$(shell date +%s)
RND1=$(shell echo "("$RANDOM" % 1024) + 63490" | bc)
GOPHER_MART_PORT=$(RND1)
RND2=$(shell echo "("$RANDOM" % 1024) + 64514" | bc)
ACCRUAL_PORT=$(RND2)
ADDRESS=localhost:$(GOPHER_MART_PORT)
TEMP_FILE=$(shell mktemp)
DOCS_DIR=./docs
DOCS_GO=$(DOCS_DIR)/docs.go
MAIN_GO=./$(CMD_FAVORITES)/main.go

# Make is verbose in Linux. Make it silent.
MAKEFLAGS += --silent

# Define where the *.proto files are located.
BATCH_DIR = ./internal/domain/batch
CONTROLLERS_DIR = ./internal/controllers
MONGO_DIR = ./internal/domain/mongo
PROTO_DIR = ./proto
REPO_DIR = ./internal/domain
SEARCH_SERVICE_DIR = ./internal/services

# Find all the proto files.
# Extend this for subfolders.
BATCH_FILES = $(BATCH_DIR)/batch.go
MONGO_FILES = $(MONGO_DIR)/mongo.go
PROTO_FILES = $(wildcard $(PROTO_DIR)/*.proto)
REPO_FILES = $(REPO_DIR)/repo.go $(REPO_DIR)/transactional.go
SEARCH_SERVICE_FILES = $(wildcard $(SEARCH_SERVICE_DIR)/*_search_service.go)
UTIL_SERVICE_FILES = $(wildcard $(SEARCH_SERVICE_DIR)/*_util_service.go)

# Convert the names of the proto files to the name of the
# generated header files.
FAVORITES_MOCK = $(CONTROLLERS_DIR)/api_favorites_service_mock_test.go
MOCK_BATCH_MOCKS := $(BATCH_FILES:%.go=%_mock_domain_test.go)
BATCH_MOCKS := ${subst $(BATCH_DIR),$(SEARCH_SERVICE_DIR),$(MOCK_BATCH_MOCKS)}
MOCK_DOMAIN_MOCKS := $(REPO_FILES:%.go=%_mock_domain_test.go)
MOCK_MONGO_MOCKS := $(MONGO_FILES:%.go=%_mock_domain_test.go)
MONGO_MOCKS := ${subst $(MONGO_DIR),$(SEARCH_SERVICE_DIR),$(MOCK_MONGO_MOCKS)}
PROTO_PB_GO := $(PROTO_FILES:%.proto=%.pb.go)
REPO_MOCKS := ${subst $(REPO_DIR),$(SEARCH_SERVICE_DIR),$(MOCK_DOMAIN_MOCKS)}
SEARCH_SERVICE_MOCKS := $(SEARCH_SERVICE_FILES:%_search_service.go=%_search_service_mock_test.go)
UTIL_SERVICE_MOCKS := $(UTIL_SERVICE_FILES:%_util_service.go=%_util_service_mock_test.go)
